name: MasterCI2
on:
  push:
    branches:
      - master
      - develop
jobs:
  prepareRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            First try using Github actions
            - Let's see
            - How it works :-)
          draft: false
          prerelease: true
  buildA:
    runs-on: ubuntu-latest
    needs: prepareRelease
    steps:
      - uses: actions/checkout@v1
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
          echo Sleep 10s...
          sleep 10
          echo Now go ahead!
      - name: Upload Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ github.workspace }}/Alias-icon-colour-03.svg
          asset_name: Alias-Icon2.svg
          asset_content_type: application/octet-stream
  buildB:
    runs-on: ubuntu-latest
    needs: prepareRelease
    steps:
      - uses: actions/checkout@v1
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Upload Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ github.workspace }}/Alias-icon-colour-03.svg
          asset_name: Alias-Icon.svg
          asset_content_type: application/octet-stream
